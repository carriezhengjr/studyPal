"use strict";

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _enzyme = require("enzyme");

var _enzyme2 = _interopRequireDefault(_enzyme);

var _HeatMapDate = require("../components/HeatMapDate");

var _HeatMapDate2 = _interopRequireDefault(_HeatMapDate);

var _utils = require("../utils");

var _enzymeAdapterReact = require("enzyme-adapter-react-16");

var _enzymeAdapterReact2 = _interopRequireDefault(_enzymeAdapterReact);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function setUp(yearStart, monthStart, dayStart, yearEnd, monthEnd, dayEnd, nb) {
	var startDate = new Date(yearStart, monthStart - 1, dayStart + 1);
	var endDate = new Date(yearEnd, monthEnd - 1, dayEnd + 1);
	var data = (0, _utils.setData)(startDate, endDate, nb);
	var colors = [];
	colors.push({ count: 2, color: "#66ff33" });
	colors.push({ count: 3, color: "#99ff33" });
	colors.push({ count: 4, color: "#ccff33" });
	colors.push({ count: 6, color: "#ffcc00" });
	colors.push({ count: 7, color: "#ff9933" });
	colors.push({ count: 9, color: "#ff0000" });
	_enzyme2.default.configure({ adapter: new _enzymeAdapterReact2.default() });
	return { data: data, startDate: startDate, endDate: endDate, colors: colors };
}

test("it should render without throwing error", function () {
	var _setUp = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp.data,
	    startDate = _setUp.startDate,
	    endDate = _setUp.endDate;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: [] }));
	expect(wrapper).toMatchSnapshot();
});

test("it should throw error because there is no data required prop", function () {
	var _setUp2 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp2.data,
	    startDate = _setUp2.startDate,
	    endDate = _setUp2.endDate;

	var error = null;
	try {
		var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, colors: [] }));
	} catch (e) {
		error = e;
	}
	expect(error).toBeInstanceOf(Error);
});

test("it should throw error because there is no startDate required prop", function () {
	var _setUp3 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp3.data,
	    startDate = _setUp3.startDate,
	    endDate = _setUp3.endDate;

	var error = null;
	try {
		var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { endDate: endDate, data: data, colors: [] }));
	} catch (e) {
		error = e;
	}
	expect(error).toBeInstanceOf(Error);
});

test("it should throw error because there is no endDate required prop", function () {
	var _setUp4 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp4.data,
	    startDate = _setUp4.startDate,
	    endDate = _setUp4.endDate;

	var error = null;
	try {
		var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, data: data, colors: [] }));
	} catch (e) {
		error = e;
	}
	expect(error).toBeInstanceOf(Error);
});

test("it should throw error because there is no colors required prop", function () {
	var _setUp5 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp5.data,
	    startDate = _setUp5.startDate,
	    endDate = _setUp5.endDate;

	var error = null;
	try {
		var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data }));
	} catch (e) {
		error = e;
	}
	expect(error).toBeInstanceOf(Error);
});

test("it should render without throwing error with colors", function () {
	var _setUp6 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp6.data,
	    startDate = _setUp6.startDate,
	    endDate = _setUp6.endDate,
	    colors = _setUp6.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with custom marginRight prop", function () {
	var _setUp7 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp7.data,
	    startDate = _setUp7.startDate,
	    endDate = _setUp7.endDate,
	    colors = _setUp7.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors, marginRight: 12 }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with custom marginBottom prop", function () {
	var _setUp8 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp8.data,
	    startDate = _setUp8.startDate,
	    endDate = _setUp8.endDate,
	    colors = _setUp8.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors, marginBottom: 12 }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with custom defaultColor prop", function () {
	var _setUp9 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp9.data,
	    startDate = _setUp9.startDate,
	    endDate = _setUp9.endDate,
	    colors = _setUp9.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors, defaulColor: "#00ff00" }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with custom rectWidth prop", function () {
	var _setUp10 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp10.data,
	    startDate = _setUp10.startDate,
	    endDate = _setUp10.endDate,
	    colors = _setUp10.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors, rectWidth: 17 }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with custom transition prop", function () {
	var _setUp11 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp11.data,
	    startDate = _setUp11.startDate,
	    endDate = _setUp11.endDate,
	    colors = _setUp11.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors, transition: 1000 }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with display legend", function () {
	var _setUp12 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp12.data,
	    startDate = _setUp12.startDate,
	    endDate = _setUp12.endDate,
	    colors = _setUp12.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors, displayLegend: false }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with all props", function () {
	var _setUp13 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp13.data,
	    startDate = _setUp13.startDate,
	    endDate = _setUp13.endDate,
	    colors = _setUp13.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, {
		startDate: startDate,
		endDate: endDate,
		data: data,
		colors: colors,
		marginRight: 15,
		marginBottom: 12,
		rectWidth: 15,
		displayLegend: false,
		transition: 1000,
		defaultColor: "#00dd00"
	}));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error one week", function () {
	var _setUp14 = setUp(2017, 9, 16, 2018, 9, 23, 231),
	    data = _setUp14.data,
	    startDate = _setUp14.startDate,
	    endDate = _setUp14.endDate,
	    colors = _setUp14.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error two months", function () {
	var _setUp15 = setUp(2017, 7, 16, 2018, 9, 16, 231),
	    data = _setUp15.data,
	    startDate = _setUp15.startDate,
	    endDate = _setUp15.endDate,
	    colors = _setUp15.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, { startDate: startDate, endDate: endDate, data: data, colors: colors }));
	expect(wrapper).toMatchSnapshot();
});

test("it should render without throwing error with custom background and text color", function () {
	var _setUp16 = setUp(2017, 1, 2, 2018, 1, 2, 231),
	    data = _setUp16.data,
	    startDate = _setUp16.startDate,
	    endDate = _setUp16.endDate,
	    colors = _setUp16.colors;

	var wrapper = (0, _enzyme.shallow)(_react2.default.createElement(_HeatMapDate2.default, {
		startDate: startDate,
		endDate: endDate,
		data: data,
		colors: colors,
		marginRight: 15,
		marginBottom: 12,
		rectWidth: 15,
		displayLegend: false,
		transition: 1000,
		defaultColor: "#00dd00",
		textColor: "#e2e2de",
		backgroundColor: "#78df87"
	}));
	expect(wrapper).toMatchSnapshot();
});