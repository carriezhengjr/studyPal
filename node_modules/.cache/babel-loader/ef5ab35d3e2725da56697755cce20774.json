{"ast":null,"code":"import _asyncToGenerator from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Calendar/Addtodo.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../../firebase\";\nimport { async } from \"@firebase/util\";\nimport { doc, setDoc, addDoc, collection } from \"firebase/firestore\";\n\nvar Addtodo = function Addtodo() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setNewTask = _useState2[1];\n\n  var handleUserInput = function handleUserInput(e) {\n    setNewTask(function () {\n      return e.target.value;\n    });\n  };\n\n  var createNewTask = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var newTask;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(task != \"\")) {\n                _context.next = 6;\n                break;\n              }\n\n              newTask = {\n                task: task,\n                completed: false\n              };\n              _context.next = 5;\n              return addDoc(collection(db, \"todos\"), newTask);\n\n            case 5:\n              setNewTask(function () {\n                return \"\";\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createNewTask(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-todo-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"add-todo-form\",\n    onSubmit: createNewTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-todo-input-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"add-todo-input\",\n    placeholder: \"Add a new task\",\n    onChange: handleUserInput,\n    value: task,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-todo-button-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"add-todo-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Add\"))));\n}; //await addDoc(collection(db, \"todos\"), newTask)\n\n\nexport default Addtodo;\n/*\nconst Addtodo = () => {\n\n    const [task, setTask] = useState(\"\")\n\n    /* Set task to user typed input \n    const handleUserInput = (e) => {\n        setTask(() => e.target.value)\n    }\n\n    /* Add new task to db \n    const createNewTask = async(e) => {\n        e.preventDefault()\n        if (task != \"\") {\n            let newTask = {\n                task,\n                completed : false\n            }\n            await addDoc(collection(db, \"todos\"), newTask)\n            setTask(\"\")\n        }\n    }\n\n    return (\n        <div className=\"Addtodo-container\">\n            <form onSubmit={createNewTask}>\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add task\"\n                        value={task}\n                        onChange={handleUserInput}\n                    />\n                </div>\n                <div className=\"button-container\">\n                    <button>Add</button>\n                </div>\n            </form> \n        </div>\n    )\n}*/","map":{"version":3,"names":["useState","useEffect","db","async","doc","setDoc","addDoc","collection","Addtodo","task","setNewTask","handleUserInput","e","target","value","createNewTask","preventDefault","newTask","completed"],"sources":["/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Calendar/Addtodo.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { db } from \"../../firebase\"\nimport { async } from \"@firebase/util\"\n\nimport { doc, setDoc, addDoc, collection } from \"firebase/firestore\"; \n\n\nconst Addtodo = () => {\n\n    const [task, setNewTask] = useState(\"\")\n\n    const handleUserInput = (e) => {\n        setNewTask(() => e.target.value)\n    }\n\n    const createNewTask = async (e) => {\n        e.preventDefault()\n        if (task != \"\") {\n            let newTask = {\n                task,\n                completed : false\n            }\n            await(addDoc(collection(db, \"todos\"), newTask))\n            setNewTask(() => \"\")\n        }\n    }\n    \n    return (\n        <div className=\"add-todo-container\">\n            <form className=\"add-todo-form\" onSubmit={createNewTask}>\n                <div className=\"add-todo-input-container\">\n                    <input \n                        className=\"add-todo-input\"\n                        placeholder=\"Add a new task\"\n                        onChange={handleUserInput}\n                        value={task}\n                    />\n                </div>\n                <div className=\"add-todo-button-container\">\n                    <button className=\"add-todo-button\">\n                        Add\n                    </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n//await addDoc(collection(db, \"todos\"), newTask)\n\nexport default Addtodo\n/*\nconst Addtodo = () => {\n\n    const [task, setTask] = useState(\"\")\n\n    /* Set task to user typed input \n    const handleUserInput = (e) => {\n        setTask(() => e.target.value)\n    }\n\n    /* Add new task to db \n    const createNewTask = async(e) => {\n        e.preventDefault()\n        if (task != \"\") {\n            let newTask = {\n                task,\n                completed : false\n            }\n            await addDoc(collection(db, \"todos\"), newTask)\n            setTask(\"\")\n        }\n    }\n\n    return (\n        <div className=\"Addtodo-container\">\n            <form onSubmit={createNewTask}>\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add task\"\n                        value={task}\n                        onChange={handleUserInput}\n                    />\n                </div>\n                <div className=\"button-container\">\n                    <button>Add</button>\n                </div>\n            </form> \n        </div>\n    )\n}*/\n\n"],"mappings":";;;;;;+CACA,oJ;;AADA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,MAAtB,EAA8BC,UAA9B,QAAgD,oBAAhD;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;EAAA,gBAESR,QAAQ,CAAC,EAAD,CAFjB;EAAA;EAAA,IAEXS,IAFW;EAAA,IAELC,UAFK;;EAIlB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAO;IAC3BF,UAAU,CAAC;MAAA,OAAME,CAAC,CAACC,MAAF,CAASC,KAAf;IAAA,CAAD,CAAV;EACH,CAFD;;EAIA,IAAMC,aAAa;IAAA,sEAAG,iBAAOH,CAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cAClBA,CAAC,CAACI,cAAF;;cADkB,MAEdP,IAAI,IAAI,EAFM;gBAAA;gBAAA;cAAA;;cAGVQ,OAHU,GAGA;gBACVR,IAAI,EAAJA,IADU;gBAEVS,SAAS,EAAG;cAFF,CAHA;cAAA;cAAA,OAORZ,MAAM,CAACC,UAAU,CAACL,EAAD,EAAK,OAAL,CAAX,EAA0Be,OAA1B,CAPE;;YAAA;cAQdP,UAAU,CAAC;gBAAA,OAAM,EAAN;cAAA,CAAD,CAAV;;YARc;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAbK,aAAa;MAAA;IAAA;EAAA,GAAnB;;EAYA,oBACI;IAAK,SAAS,EAAC,oBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAM,SAAS,EAAC,eAAhB;IAAgC,QAAQ,EAAEA,aAA1C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAK,SAAS,EAAC,0BAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IACI,SAAS,EAAC,gBADd;IAEI,WAAW,EAAC,gBAFhB;IAGI,QAAQ,EAAEJ,eAHd;IAII,KAAK,EAAEF,IAJX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CADJ,eASI;IAAK,SAAS,EAAC,2BAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAQ,SAAS,EAAC,iBAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,SADJ,CATJ,CADJ,CADJ;AAmBH,CAvCD,C,CAyCA;;;AAEA,eAAeD,OAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}