{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = withDragAndDrop;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _createSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createSuper\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _propTypes = require(\"../../utils/propTypes\");\n\nvar _EventWrapper = _interopRequireDefault(require(\"./EventWrapper\"));\n\nvar _EventContainerWrapper = _interopRequireDefault(require(\"./EventContainerWrapper\"));\n\nvar _WeekWrapper = _interopRequireDefault(require(\"./WeekWrapper\"));\n\nvar _common = require(\"./common\");\n\nvar _DnDContext = require(\"./DnDContext\");\n\nvar _excluded = [\"selectable\", \"elementProps\"];\n\nfunction withDragAndDrop(Calendar) {\n  var DragAndDropCalendar = /*#__PURE__*/function (_React$Component) {\n    (0, _inherits2.default)(DragAndDropCalendar, _React$Component);\n\n    var _super = (0, _createSuper2.default)(DragAndDropCalendar);\n\n    function DragAndDropCalendar() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DragAndDropCalendar);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _this.defaultOnDragOver = function (event) {\n        event.preventDefault();\n      };\n\n      _this.handleBeginAction = function (event, action, direction) {\n        _this.setState({\n          event: event,\n          action: action,\n          direction: direction\n        });\n\n        var onDragStart = _this.props.onDragStart;\n        if (onDragStart) onDragStart({\n          event: event,\n          action: action,\n          direction: direction\n        });\n      };\n\n      _this.handleInteractionStart = function () {\n        if (_this.state.interacting === false) _this.setState({\n          interacting: true\n        });\n      };\n\n      _this.handleInteractionEnd = function (interactionInfo) {\n        var _this$state = _this.state,\n            action = _this$state.action,\n            event = _this$state.event;\n        if (!action) return;\n\n        _this.setState({\n          action: null,\n          event: null,\n          interacting: false,\n          direction: null\n        });\n\n        if (interactionInfo == null) return;\n        interactionInfo.event = event;\n        var _this$props = _this.props,\n            onEventDrop = _this$props.onEventDrop,\n            onEventResize = _this$props.onEventResize;\n        if (action === 'move' && onEventDrop) onEventDrop(interactionInfo);\n        if (action === 'resize' && onEventResize) onEventResize(interactionInfo);\n      };\n\n      var components = _this.props.components;\n      _this.components = (0, _common.mergeComponents)(components, {\n        eventWrapper: _EventWrapper.default,\n        eventContainerWrapper: _EventContainerWrapper.default,\n        weekWrapper: _WeekWrapper.default\n      });\n      _this.state = {\n        interacting: false\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(DragAndDropCalendar, [{\n      key: \"getDnDContextValue\",\n      value: function getDnDContextValue() {\n        return {\n          draggable: {\n            onStart: this.handleInteractionStart,\n            onEnd: this.handleInteractionEnd,\n            onBeginAction: this.handleBeginAction,\n            onDropFromOutside: this.props.onDropFromOutside,\n            dragFromOutsideItem: this.props.dragFromOutsideItem,\n            draggableAccessor: this.props.draggableAccessor,\n            resizableAccessor: this.props.resizableAccessor,\n            dragAndDropAction: this.state\n          }\n        };\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props2 = this.props,\n            selectable = _this$props2.selectable,\n            elementProps = _this$props2.elementProps,\n            props = (0, _objectWithoutProperties2.default)(_this$props2, _excluded);\n        var interacting = this.state.interacting;\n        delete props.onEventDrop;\n        delete props.onEventResize;\n        props.selectable = selectable ? 'ignoreEvents' : false;\n        var elementPropsWithDropFromOutside = this.props.onDropFromOutside ? (0, _objectSpread2.default)((0, _objectSpread2.default)({}, elementProps), {}, {\n          onDragOver: this.props.onDragOver || this.defaultOnDragOver\n        }) : elementProps;\n        props.className = (0, _clsx.default)(props.className, 'rbc-addons-dnd', !!interacting && 'rbc-addons-dnd-is-dragging');\n        var context = this.getDnDContextValue();\n        return /*#__PURE__*/_react.default.createElement(_DnDContext.DnDContext.Provider, {\n          value: context\n        }, /*#__PURE__*/_react.default.createElement(Calendar, Object.assign({}, props, {\n          elementProps: elementPropsWithDropFromOutside,\n          components: this.components\n        })));\n      }\n    }]);\n    return DragAndDropCalendar;\n  }(_react.default.Component);\n\n  DragAndDropCalendar.defaultProps = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, Calendar.defaultProps), {}, {\n    draggableAccessor: null,\n    resizableAccessor: null,\n    resizable: true\n  });\n  return DragAndDropCalendar;\n}","map":null,"metadata":{},"sourceType":"script"}