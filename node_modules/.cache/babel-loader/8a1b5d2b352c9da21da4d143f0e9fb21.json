{"ast":null,"code":"var _jsxFileName = \"/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Todolist.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from './Card.js';\nimport UserTasks from './UserTasks.js';\nimport AddTodo from './AddTodo.js';\nimport Todo from './Todo.js';\nimport { db } from \"../firebase.js\";\nimport { collection, query, onSnapshot, doc, updateDoc, deleteDoc, QuerySnapshot } from \"firebase/firestore\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todolist() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"todos\"));\n    const unsub = onSnapshot(q, QuerySnapshot => {\n      let todosArray = [];\n      QuerySnapshot.forEach(doc => {\n        todosArray.push({ ...doc.data(),\n          id: doc.id\n        });\n        setTodos(todosArray);\n      });\n      return () => unsub();\n    }, []);\n  });\n\n  const handleEdit = async (todo, title) => {\n    await updateDoc(doc(db, \"todos\", todo.id), {\n      title: title\n    });\n  };\n\n  const toggleComplete = async todo => {\n    await updateDoc(doc(db, \"todos\", todo.id), {\n      completed: !todo.completed\n    });\n  };\n\n  const handleDelete = async id => {\n    await deleteDoc(doc(db, \"todos\", id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To do list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo_container\",\n      children: todos.map(todo => {\n        /*#__PURE__*/\n        _jsxDEV(Todo, {\n          todo: todo,\n          toggleComplete: toggleComplete,\n          handleDelete: handleDelete,\n          handleEdit: handleEdit\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todolist, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = Todolist;\nexport default Todolist;\n/*\n // To-do list Cards\n    const userTasks = UserTasks.map(item => {\n        return <Card\n                    task = {item.task}\n                    day = {item.day}\n                    urgency = {item.urgency}\n                />\n    });\n\n    return (\n        <>\n        <div class=\"container\">\n\n            <h1 class=\"title\">To-do List</h1>\n            <form>\n                <input className=\"todoinput\"></input>\n                <button className=\"todobutton\">Add Task</button>\n            </form>\n        </div>\n\n        <div className=\"cards\">\n            {userTasks}\n        </div>\n        \n        </>\n    );\n}\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Card","UserTasks","AddTodo","Todo","db","collection","query","onSnapshot","doc","updateDoc","deleteDoc","QuerySnapshot","useState","useEffect","Todolist","todos","setTodos","q","unsub","todosArray","forEach","push","data","id","handleEdit","todo","title","toggleComplete","completed","handleDelete","map"],"sources":["/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Todolist.js"],"sourcesContent":["import React from \"react\";\nimport Card from './Card.js';\nimport UserTasks from './UserTasks.js';\nimport AddTodo from './AddTodo.js'\nimport Todo from './Todo.js'\n\n\nimport {db} from \"../firebase.js\"\n\nimport {\n    collection,\n    query,\n    onSnapshot,\n    doc,\n    updateDoc,\n    deleteDoc,\n    QuerySnapshot\n  } from \"firebase/firestore\"\n  \nimport { useState, useEffect } from \"react\"\n\nfunction Todolist () {\n    const [todos, setTodos] = useState([])\n\n    useEffect(() => {\n        const q = query(collection(db, \"todos\"))\n        const unsub = onSnapshot(q, (QuerySnapshot) => {\n            let todosArray = []\n            QuerySnapshot.forEach((doc) => {\n                todosArray.push({\n                    ...doc.data(),\n                    id: doc.id\n                })\n                setTodos(todosArray)\n            })\n            return () => unsub()\n        }, [])\n    })\n    \n    const handleEdit = async (todo, title) => {\n        await updateDoc(doc(db, \"todos\", todo.id), {title: title})\n    }\n    const toggleComplete = async (todo) => {\n        await updateDoc(doc(db, \"todos\", todo.id), {\n            completed: !todo.completed\n        })\n    }\n\n    const handleDelete = async (id) => {\n        await deleteDoc(doc(db, \"todos\", id))\n    }\n    \n    return (\n        <div>\n            <h1>To do list</h1>\n            <AddTodo />\n            <div className=\"todo_container\">\n                {todos.map((todo) => {\n                    <Todo\n                        key={todo.id}\n                        todo={todo}\n                        toggleComplete={toggleComplete}\n                        handleDelete={handleDelete}\n                        handleEdit={handleEdit}\n                    />\n                })}\n            </div>\n        </div>\n\n    )\n}\n\nexport default Todolist;\n\n\n/*\n // To-do list Cards\n    const userTasks = UserTasks.map(item => {\n        return <Card\n                    task = {item.task}\n                    day = {item.day}\n                    urgency = {item.urgency}\n                />\n    });\n\n    return (\n        <>\n        <div class=\"container\">\n\n            <h1 class=\"title\">To-do List</h1>\n            <form>\n                <input className=\"todoinput\"></input>\n                <button className=\"todobutton\">Add Task</button>\n            </form>\n        </div>\n\n        <div className=\"cards\">\n            {userTasks}\n        </div>\n        \n        </>\n    );\n}\n*/"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,SAAQC,EAAR,QAAiB,gBAAjB;AAEA,SACIC,UADJ,EAEIC,KAFJ,EAGIC,UAHJ,EAIIC,GAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,aAPJ,QAQS,oBART;AAUA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,QAAT,GAAqB;EAAA;;EACjB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMI,CAAC,GAAGX,KAAK,CAACD,UAAU,CAACD,EAAD,EAAK,OAAL,CAAX,CAAf;IACA,MAAMc,KAAK,GAAGX,UAAU,CAACU,CAAD,EAAKN,aAAD,IAAmB;MAC3C,IAAIQ,UAAU,GAAG,EAAjB;MACAR,aAAa,CAACS,OAAd,CAAuBZ,GAAD,IAAS;QAC3BW,UAAU,CAACE,IAAX,CAAgB,EACZ,GAAGb,GAAG,CAACc,IAAJ,EADS;UAEZC,EAAE,EAAEf,GAAG,CAACe;QAFI,CAAhB;QAIAP,QAAQ,CAACG,UAAD,CAAR;MACH,CAND;MAOA,OAAO,MAAMD,KAAK,EAAlB;IACH,CAVuB,EAUrB,EAVqB,CAAxB;EAWH,CAbQ,CAAT;;EAeA,MAAMM,UAAU,GAAG,OAAOC,IAAP,EAAaC,KAAb,KAAuB;IACtC,MAAMjB,SAAS,CAACD,GAAG,CAACJ,EAAD,EAAK,OAAL,EAAcqB,IAAI,CAACF,EAAnB,CAAJ,EAA4B;MAACG,KAAK,EAAEA;IAAR,CAA5B,CAAf;EACH,CAFD;;EAGA,MAAMC,cAAc,GAAG,MAAOF,IAAP,IAAgB;IACnC,MAAMhB,SAAS,CAACD,GAAG,CAACJ,EAAD,EAAK,OAAL,EAAcqB,IAAI,CAACF,EAAnB,CAAJ,EAA4B;MACvCK,SAAS,EAAE,CAACH,IAAI,CAACG;IADsB,CAA5B,CAAf;EAGH,CAJD;;EAMA,MAAMC,YAAY,GAAG,MAAON,EAAP,IAAc;IAC/B,MAAMb,SAAS,CAACF,GAAG,CAACJ,EAAD,EAAK,OAAL,EAAcmB,EAAd,CAAJ,CAAf;EACH,CAFD;;EAIA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAK,SAAS,EAAC,gBAAf;MAAA,UACKR,KAAK,CAACe,GAAN,CAAWL,IAAD,IAAU;QACjB;QAAA,QAAC,IAAD;UAEI,IAAI,EAAEA,IAFV;UAGI,cAAc,EAAEE,cAHpB;UAII,YAAY,EAAEE,YAJlB;UAKI,UAAU,EAAEL;QALhB,GACSC,IAAI,CAACF,EADd;UAAA;UAAA;UAAA;QAAA;MAOH,CARA;IADL;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GAjDQT,Q;;KAAAA,Q;AAmDT,eAAeA,QAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}