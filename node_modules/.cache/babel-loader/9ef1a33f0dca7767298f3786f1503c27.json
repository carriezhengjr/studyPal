{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectSpread4 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nfunction stringifyPercent(v) {\n  return typeof v === 'string' ? v : v + '%';\n}\n/* eslint-disable react/prop-types */\n\n\nfunction TimeGridEvent(props) {\n  var style = props.style,\n      className = props.className,\n      event = props.event,\n      accessors = props.accessors,\n      rtl = props.rtl,\n      selected = props.selected,\n      label = props.label,\n      continuesPrior = props.continuesPrior,\n      continuesAfter = props.continuesAfter,\n      getters = props.getters,\n      onClick = props.onClick,\n      onDoubleClick = props.onDoubleClick,\n      isBackgroundEvent = props.isBackgroundEvent,\n      onKeyPress = props.onKeyPress,\n      _props$components = props.components,\n      Event = _props$components.event,\n      EventWrapper = _props$components.eventWrapper;\n  var title = accessors.title(event);\n  var tooltip = accessors.tooltip(event);\n  var end = accessors.end(event);\n  var start = accessors.start(event);\n  var userProps = getters.eventProp(event, start, end, selected);\n  var height = style.height,\n      top = style.top,\n      width = style.width,\n      xOffset = style.xOffset;\n  var inner = [/*#__PURE__*/_react.default.createElement(\"div\", {\n    key: \"1\",\n    className: \"rbc-event-label\"\n  }, label), /*#__PURE__*/_react.default.createElement(\"div\", {\n    key: \"2\",\n    className: \"rbc-event-content\"\n  }, Event ? /*#__PURE__*/_react.default.createElement(Event, {\n    event: event,\n    title: title\n  }) : title)];\n  var eventStyle = isBackgroundEvent ? (0, _objectSpread4.default)((0, _objectSpread4.default)({}, userProps.style), {}, (0, _defineProperty2.default)({\n    top: stringifyPercent(top),\n    height: stringifyPercent(height),\n    // Adding 10px to take events container right margin into account\n    width: \"calc(\".concat(width, \" + 10px)\")\n  }, rtl ? 'right' : 'left', stringifyPercent(Math.max(0, xOffset)))) : (0, _objectSpread4.default)((0, _objectSpread4.default)({}, userProps.style), {}, (0, _defineProperty2.default)({\n    top: stringifyPercent(top),\n    width: stringifyPercent(width),\n    height: stringifyPercent(height)\n  }, rtl ? 'right' : 'left', stringifyPercent(xOffset)));\n  return /*#__PURE__*/_react.default.createElement(EventWrapper, Object.assign({\n    type: \"time\"\n  }, props), /*#__PURE__*/_react.default.createElement(\"div\", {\n    onClick: onClick,\n    onDoubleClick: onDoubleClick,\n    style: eventStyle,\n    onKeyPress: onKeyPress,\n    title: tooltip ? (typeof label === 'string' ? label + ': ' : '') + tooltip : undefined,\n    className: (0, _clsx.default)(isBackgroundEvent ? 'rbc-background-event' : 'rbc-event', className, userProps.className, {\n      'rbc-selected': selected,\n      'rbc-event-continues-earlier': continuesPrior,\n      'rbc-event-continues-later': continuesAfter\n    })\n  }, inner));\n}\n\nvar _default = TimeGridEvent;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}