{"ast":null,"code":"import _defineProperty from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _jsxFileName = \"/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Analytics/Analytics.js\";\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport DraggableElement from \"./DraggableElement\";\nvar DragDropContextContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  padding: 20px;\\n  border: 4px solid indianred;\\n  border-radius: 6px;\\n\"])));\nvar ListGrid = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr 1fr;\\n  grid-gap: 8px;\\n\"]))); // fake data generator\n\nvar getItems = function getItems(count, prefix) {\n  return Array.from({\n    length: count\n  }, function (v, k) {\n    return k;\n  }).map(function (k) {\n    var randomId = Math.floor(Math.random() * 1000);\n    return {\n      id: \"item-\".concat(randomId),\n      prefix: prefix,\n      content: \"item \".concat(randomId)\n    };\n  });\n};\n\nvar removeFromList = function removeFromList(list, index) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(index, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  return [removed, result];\n};\n\nvar addToList = function addToList(list, index, element) {\n  var result = Array.from(list);\n  result.splice(index, 0, element);\n  return result;\n};\n\nvar lists = [\"todo\", \"inProgress\", \"done\"];\n\nvar generateLists = function generateLists() {\n  return lists.reduce(function (acc, listKey) {\n    return _objectSpread({}, acc, _defineProperty({}, listKey, getItems(10, listKey)));\n  }, {});\n};\n\nfunction DragList() {\n  var _this = this;\n\n  var _React$useState = React.useState(generateLists()),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      elements = _React$useState2[0],\n      setElements = _React$useState2[1];\n\n  useEffect(function () {\n    setElements(generateLists());\n  }, []);\n\n  var onDragEnd = function onDragEnd(result) {\n    if (!result.destination) {\n      return;\n    }\n\n    var listCopy = _objectSpread({}, elements);\n\n    var sourceList = listCopy[result.source.droppableId];\n\n    var _removeFromList = removeFromList(sourceList, result.source.index),\n        _removeFromList2 = _slicedToArray(_removeFromList, 2),\n        removedElement = _removeFromList2[0],\n        newSourceList = _removeFromList2[1];\n\n    listCopy[result.source.droppableId] = newSourceList;\n    var destinationList = listCopy[result.destination.droppableId];\n    listCopy[result.destination.droppableId] = addToList(destinationList, result.destination.index, removedElement);\n    setElements(listCopy);\n  };\n\n  return /*#__PURE__*/React.createElement(DragDropContextContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DragDropContext, {\n    onDragEnd: onDragEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, lists.map(function (listKey) {\n    return /*#__PURE__*/React.createElement(DraggableElement, {\n      elements: elements[listKey],\n      key: listKey,\n      prefix: listKey,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    });\n  }))));\n}\n\nexport default Analytics;","map":{"version":3,"names":["React","useEffect","styled","DragDropContext","DraggableElement","DragDropContextContainer","div","ListGrid","getItems","count","prefix","Array","from","length","v","k","map","randomId","Math","floor","random","id","content","removeFromList","list","index","result","splice","removed","addToList","element","lists","generateLists","reduce","acc","listKey","DragList","useState","elements","setElements","onDragEnd","destination","listCopy","sourceList","source","droppableId","removedElement","newSourceList","destinationList","Analytics"],"sources":["/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Analytics/Analytics.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport DraggableElement from \"./DraggableElement\";\n\nconst DragDropContextContainer = styled.div`\n  padding: 20px;\n  border: 4px solid indianred;\n  border-radius: 6px;\n`;\n\nconst ListGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 8px;\n`;\n\n// fake data generator\nconst getItems = (count, prefix) =>\n  Array.from({ length: count }, (v, k) => k).map((k) => {\n    const randomId = Math.floor(Math.random() * 1000);\n    return {\n      id: `item-${randomId}`,\n      prefix,\n      content: `item ${randomId}`\n    };\n  });\n\nconst removeFromList = (list, index) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(index, 1);\n  return [removed, result];\n};\n\nconst addToList = (list, index, element) => {\n  const result = Array.from(list);\n  result.splice(index, 0, element);\n  return result;\n};\n\nconst lists = [\"todo\", \"inProgress\", \"done\"];\n\nconst generateLists = () =>\n  lists.reduce(\n    (acc, listKey) => ({ ...acc, [listKey]: getItems(10, listKey) }),\n    {}\n  );\n\nfunction DragList() {\n  const [elements, setElements] = React.useState(generateLists());\n\n  useEffect(() => {\n    setElements(generateLists());\n  }, []);\n\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    const listCopy = { ...elements };\n\n    const sourceList = listCopy[result.source.droppableId];\n    const [removedElement, newSourceList] = removeFromList(\n      sourceList,\n      result.source.index\n    );\n    listCopy[result.source.droppableId] = newSourceList;\n    const destinationList = listCopy[result.destination.droppableId];\n    listCopy[result.destination.droppableId] = addToList(\n      destinationList,\n      result.destination.index,\n      removedElement\n    );\n\n    setElements(listCopy);\n  };\n\n  return (\n    <DragDropContextContainer>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <ListGrid>\n          {lists.map((listKey) => (\n            <DraggableElement\n              elements={elements[listKey]}\n              key={listKey}\n              prefix={listKey}\n            />\n          ))}\n        </ListGrid>\n      </DragDropContext>\n    </DragDropContextContainer>\n  );\n}\n\nexport default Analytics;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}