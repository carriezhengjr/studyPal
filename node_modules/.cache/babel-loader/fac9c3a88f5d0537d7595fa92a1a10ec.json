{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dragAccessors = void 0;\nexports.eventTimes = eventTimes;\nexports.mergeComponents = mergeComponents;\nexports.pointInColumn = pointInColumn;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread2\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _accessors = require(\"../../utils/accessors\");\n\nvar _react = require(\"react\");\n\nvar _excluded = [\"children\"];\nvar dragAccessors = {\n  start: (0, _accessors.wrapAccessor)(function (e) {\n    return e.start;\n  }),\n  end: (0, _accessors.wrapAccessor)(function (e) {\n    return e.end;\n  })\n};\nexports.dragAccessors = dragAccessors;\n\nfunction nest() {\n  for (var _len = arguments.length, Components = new Array(_len), _key = 0; _key < _len; _key++) {\n    Components[_key] = arguments[_key];\n  }\n\n  var factories = Components.filter(Boolean).map(_react.createFactory);\n\n  var Nest = function Nest(_ref) {\n    var children = _ref.children,\n        props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n    return factories.reduceRight(function (child, factory) {\n      return factory(props, child);\n    }, children);\n  };\n\n  return Nest;\n}\n\nfunction mergeComponents() {\n  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var addons = arguments.length > 1 ? arguments[1] : undefined;\n  var keys = Object.keys(addons);\n  var result = (0, _objectSpread2.default)({}, components);\n  keys.forEach(function (key) {\n    result[key] = components[key] ? nest(components[key], addons[key]) : addons[key];\n  });\n  return result;\n}\n\nfunction pointInColumn(bounds, point) {\n  var left = bounds.left,\n      right = bounds.right,\n      top = bounds.top;\n  var x = point.x,\n      y = point.y;\n  return x < right + 10 && x > left && y > top;\n}\n\nfunction eventTimes(event, accessors, localizer) {\n  var start = accessors.start(event);\n  var end = accessors.end(event);\n  var isZeroDuration = localizer.eq(start, end, 'minutes') && localizer.diff(start, end, 'minutes') === 0; // make zero duration midnight events at least one day long\n\n  if (isZeroDuration) end = localizer.add(end, 1, 'day');\n  var duration = localizer.diff(start, end, 'milliseconds');\n  return {\n    start: start,\n    end: end,\n    duration: duration\n  };\n}","map":null,"metadata":{},"sourceType":"script"}