{"ast":null,"code":"var _jsxFileName = \"/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Calendar/Addtodo.js\";\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../../firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { async } from \"@firebase/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Addtodo = () => {\n  let newTask = {\n    email: \"ggg\"\n  };\n  async(e);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Addtodo;\nexport default Addtodo;\n/*\nconst Addtodo = () => {\n\n    const [task, setTask] = useState(\"\")\n\n    /* Set task to user typed input \n    const handleUserInput = (e) => {\n        setTask(() => e.target.value)\n    }\n\n    /* Add new task to db \n    const createNewTask = async(e) => {\n        e.preventDefault()\n        if (task != \"\") {\n            let newTask = {\n                task,\n                completed : false\n            }\n            await addDoc(collection(db, \"todos\"), newTask)\n            setTask(\"\")\n        }\n    }\n\n    return (\n        <div className=\"Addtodo-container\">\n            <form onSubmit={createNewTask}>\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add task\"\n                        value={task}\n                        onChange={handleUserInput}\n                    />\n                </div>\n                <div className=\"button-container\">\n                    <button>Add</button>\n                </div>\n            </form> \n        </div>\n    )\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Addtodo\");","map":{"version":3,"names":["useState","useEffect","db","collection","addDoc","async","Addtodo","newTask","email","e"],"sources":["/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Calendar/Addtodo.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\nimport { db } from \"../../firebase\"\nimport { collection, addDoc } from \"firebase/firestore\"\nimport { async } from \"@firebase/util\"\n\nconst Addtodo = () => {\n   let newTask = {\n        email:\"ggg\"\n    }\n    async(e)\n\n    return (\n        <div>hi</div>\n    )\n\n}\n\nexport default Addtodo\n\n/*\nconst Addtodo = () => {\n\n    const [task, setTask] = useState(\"\")\n\n    /* Set task to user typed input \n    const handleUserInput = (e) => {\n        setTask(() => e.target.value)\n    }\n\n    /* Add new task to db \n    const createNewTask = async(e) => {\n        e.preventDefault()\n        if (task != \"\") {\n            let newTask = {\n                task,\n                completed : false\n            }\n            await addDoc(collection(db, \"todos\"), newTask)\n            setTask(\"\")\n        }\n    }\n\n    return (\n        <div className=\"Addtodo-container\">\n            <form onSubmit={createNewTask}>\n                <div className=\"input-container\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Add task\"\n                        value={task}\n                        onChange={handleUserInput}\n                    />\n                </div>\n                <div className=\"button-container\">\n                    <button>Add</button>\n                </div>\n            </form> \n        </div>\n    )\n}*/\n\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,oBAAnC;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EACnB,IAAIC,OAAO,GAAG;IACTC,KAAK,EAAC;EADG,CAAd;EAGCH,KAAK,CAACI,CAAD,CAAL;EAEA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH,CAVD;;KAAMH,O;AAYN,eAAeA,OAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}