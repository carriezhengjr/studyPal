{"ast":null,"code":"var _jsxFileName = \"/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/TaskTracker/CalendarScheduler.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { db } from \"../../firebase\";\nimport { doc, addDoc, collection, query, onSnapshot, deleteDoc } from \"firebase/firestore\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Title from '../Title/Title.js';\nimport './CalendarScheduler.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\n\nconst CalendarScheduler = props => {\n  _s();\n\n  const [events, setEvent] = useState([]);\n\n  const normalizeDateTimeField = events => {\n    for (let i = 0; i < events.length; i++) {\n      let title = events[i]['title'];\n      let id = events[i]['id'];\n      let start = new Date(events[i]['start']['seconds'] * 1000);\n      let end = new Date(events[i]['end']['seconds'] * 1000);\n      let newEvent = {\n        title: title,\n        id: id,\n        start: start,\n        end: end\n      };\n      events[i] = newEvent;\n    }\n\n    return events;\n  };\n\n  useEffect(e => {\n    let active = true;\n\n    if (active == true) {\n      const q = query(collection(db, \"calendar\"));\n      const getAllTasks = onSnapshot(q, querySnapshot => {\n        let currentEvents = [];\n        querySnapshot.forEach(doc => {\n          currentEvents.push({ ...doc.data(),\n            id: doc.id\n          });\n        });\n        setEvent(() => normalizeDateTimeField(currentEvents));\n      });\n    }\n\n    return () => {\n      active = false;\n    };\n  }, []);\n\n  const createNewEvent = async e => {\n    let confirmEventTitle = window.prompt(\"Create a new event\");\n\n    if (confirmEventTitle) {\n      let newEvent = {\n        start: e.start,\n        end: e.end,\n        title: confirmEventTitle\n      };\n      let newEvents = [...events, newEvent];\n      setEvent(() => newEvents);\n      await addDoc(collection(db, \"calendar\"), newEvent);\n    }\n  };\n\n  const deleteCurrentEvent = async e => {\n    let confirmDeleteEvent = window.confirm(\"Delete this event?\");\n\n    if (confirmDeleteEvent) {\n      let newEvents = events.filter(event => event.id != e.id);\n      setEvent(() => newEvents);\n      await deleteDoc(doc(db, \"calendar\", e.id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      defaultDate: moment().toDate(),\n      defaultView: \"month\",\n      views: ['month', 'week'],\n      localizer: localizer,\n      events: events,\n      selectable: true,\n      onSelectSlot: createNewEvent,\n      onSelectEvent: deleteCurrentEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CalendarScheduler, \"SLdEuMCZ0UyOchttRstNfhfk/L8=\");\n\n_c = CalendarScheduler;\nexport default CalendarScheduler;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarScheduler\");","map":{"version":3,"names":["React","useEffect","useState","db","doc","addDoc","collection","query","onSnapshot","deleteDoc","Calendar","momentLocalizer","moment","Title","localizer","CalendarScheduler","props","events","setEvent","normalizeDateTimeField","i","length","title","id","start","Date","end","newEvent","e","active","q","getAllTasks","querySnapshot","currentEvents","forEach","push","data","createNewEvent","confirmEventTitle","window","prompt","newEvents","deleteCurrentEvent","confirmDeleteEvent","confirm","filter","event","toDate"],"sources":["/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/TaskTracker/CalendarScheduler.js"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\n\nimport { db } from \"../../firebase\"\nimport {  doc, \n          addDoc, \n          collection, \n          query, \n          onSnapshot,\n          deleteDoc\n        } from \"firebase/firestore\"; \n\n\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport Title from '../Title/Title.js'\n\nimport './CalendarScheduler.css'\n\n\nconst localizer = momentLocalizer(moment);\n\nconst CalendarScheduler = (props) => {\n\n  const[events, setEvent] = useState([])\n\n  const normalizeDateTimeField = (events) => {\n    for (let i = 0; i < events.length; i++) {\n      let title = events[i]['title']\n      let id = events[i]['id']\n      let start = new Date(events[i]['start']['seconds'] * 1000)\n      let end = new Date(events[i]['end']['seconds'] * 1000)\n\n      let newEvent = {\n        title: title,\n        id: id,\n        start: start,\n        end: end\n      }\n      events[i] = newEvent\n    }\n    return events\n  }\n  \n  useEffect((e) => {\n    let active = true\n    if (active == true) {\n      const q = query(collection(db, \"calendar\"))\n      const getAllTasks = onSnapshot(q, (querySnapshot) => {\n      let currentEvents = []\n      querySnapshot.forEach((doc) => {\n        currentEvents.push({ ...doc.data(), id: doc.id})\n      })\n      setEvent(() => normalizeDateTimeField(currentEvents))\n\n    })}\n    return () => {active = false}\n  },[])\n\n  const createNewEvent = async (e) => {\n    let confirmEventTitle = window.prompt(\"Create a new event\")\n    if (confirmEventTitle) {\n      let newEvent = {\n        start : e.start,\n        end: e.end,\n        title: confirmEventTitle\n      }\n      let newEvents = [...events, newEvent]\n      setEvent(() => newEvents)\n      await addDoc(collection(db, \"calendar\"), newEvent)\n    }\n  }\n\n  const deleteCurrentEvent = async (e) => {\n    let confirmDeleteEvent = window.confirm(\"Delete this event?\")\n    if (confirmDeleteEvent) {\n      let newEvents = events.filter((event) => event.id != e.id)\n      setEvent(() => newEvents)\n      await deleteDoc(doc(db, \"calendar\", e.id))\n    }\n  }\n\n  return (\n      <div className=\"App\"> \n      <Calendar\n        defaultDate={moment().toDate()}\n        defaultView=\"month\"\n        views={['month','week']}\n        localizer={localizer}\n        events={events}\n        selectable\n        onSelectSlot={createNewEvent}\n        onSelectEvent={deleteCurrentEvent}\n      />   \n      </div>\n    );\n}\n\nexport default CalendarScheduler\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}